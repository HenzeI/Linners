/*
Model: LinnerDB
Database: Oracle 11g Release 2
*/


-- Create tables section -------------------------------------------------

-- Table EMPRESA

CREATE TABLE "EMPRESA"(
  "ID_EMPRESA" Number(5,0) NOT NULL,
  "NIF" Char(9) NOT NULL,
  "NOMBRE" Varchar2(50) NOT NULL,
  "DIRECCION" Varchar2(100) NOT NULL,
  "CORREO_ELECTRONICO" Varchar2(50) NOT NULL,
  "TELEFONO_FIJO" Char(9) NOT NULL,
  CONSTRAINT "ComprobarCorreoEmpresa" CHECK (CORREO_ELECTRONICO like ('%@%.%')),
  CONSTRAINT "ComprobarTelefonoFijo" CHECK (REGEXP_LIKE(TELEFONO_FIJO, '[9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')),
  CONSTRAINT "ComprobarNIF" CHECK (REGEXP_LIKE(NIF, '[A-Z][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]'))
)
/

-- Add keys for table EMPRESA

ALTER TABLE "EMPRESA" ADD CONSTRAINT "PK_EMPRESA" PRIMARY KEY ("ID_EMPRESA")
/

ALTER TABLE "EMPRESA" ADD CONSTRAINT "NIF" UNIQUE ("NIF")
/

ALTER TABLE "EMPRESA" ADD CONSTRAINT "NOMBRE" UNIQUE ("NOMBRE")
/

-- Table PARADA

CREATE TABLE "PARADA"(
  "ID_PARADA" Number(5,0) NOT NULL,
  "DIRECCION" Varchar2(100) NOT NULL,
  "LOCALIDAD" Varchar2(30) NOT NULL,
  "PROVINCIA" Varchar2(30) NOT NULL,
  "LATITUD" Varchar2(30) NOT NULL,
  "LONGITUD" Varchar2(30) NOT NULL,
  "CP" Char(5) NOT NULL,
  CONSTRAINT "ComprobarCPParada" CHECK (REGEXP_LIKE(CP, '[0-9][0-9][0-9][0-9][0-9]'))
)
/

-- Add keys for table PARADA

ALTER TABLE "PARADA" ADD CONSTRAINT "PK_PARADA" PRIMARY KEY ("ID_PARADA")
/

-- Table TERMINAL

CREATE TABLE "TERMINAL"(
  "ID_TERMINAL" Number(5,0) NOT NULL,
  "ID_EMPRESA" Number(5,0) NOT NULL
)
/

-- Add keys for table TERMINAL

ALTER TABLE "TERMINAL" ADD CONSTRAINT "PK_TERMINAL" PRIMARY KEY ("ID_TERMINAL","ID_EMPRESA")
/

-- Table LINEA_PARADA

CREATE TABLE "LINEA_PARADA"(
  "ID_PARADA" Number(5,0) NOT NULL,
  "ORDEN_PARADA" Number(3,0) NOT NULL,
  "ID_LINEA" Number(5,0) NOT NULL
)
/

-- Add keys for table LINEA_PARADA

ALTER TABLE "LINEA_PARADA" ADD CONSTRAINT "PK_LINEA_PARADA" PRIMARY KEY ("ORDEN_PARADA","ID_LINEA")
/

-- Table LINEA

CREATE TABLE "LINEA"(
  "ID_LINEA" Number(5,0) NOT NULL,
  "ID_EMPRESA" Number(5,0) NOT NULL,
  "PRECIO" Number(3,2) NOT NULL
)
/

-- Add keys for table LINEA

ALTER TABLE "LINEA" ADD CONSTRAINT "PK_LINEA" PRIMARY KEY ("ID_LINEA")
/

-- Table USUARIO

CREATE TABLE "USUARIO"(
  "ID_USUARIO" Number(5,0) NOT NULL,
  "DNI" Char(9) NOT NULL,
  "NOMBRE" Varchar2(30) NOT NULL,
  "APELLIDO1" Varchar2(30) NOT NULL,
  "APELLIDO2" Varchar2(30),
  "DIRECCION" Varchar2(50) NOT NULL,
  "LOCALIDAD" Varchar2(30) NOT NULL,
  "PROVINCIA" Varchar2(30) NOT NULL,
  "CORREO_ELECTRONICO" Varchar2(50) NOT NULL,
  "CONTRASENA" Varchar2(50) NOT NULL,
  "TELEFONO" Char(9) NOT NULL,
  CONSTRAINT "ComprobarCorreoUsuario" CHECK (CORREO_ELECTRONICO like ('%@%.%')),
  CONSTRAINT "ComprobarTelefono" CHECK (REGEXP_LIKE(TELEFONO, '[6-7][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]')),
  CONSTRAINT "ComprobarDNI" CHECK (REGEXP_LIKE(DNI, '[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][A-Z]'))
)
/

-- Add keys for table USUARIO

ALTER TABLE "USUARIO" ADD CONSTRAINT "PK_USUARIO" PRIMARY KEY ("ID_USUARIO")
/

ALTER TABLE "USUARIO" ADD CONSTRAINT "CORREO_ELECTRONICO" UNIQUE ("CORREO_ELECTRONICO")
/

ALTER TABLE "USUARIO" ADD CONSTRAINT "DNI" UNIQUE ("DNI")
/

ALTER TABLE "USUARIO" ADD CONSTRAINT "TELEFONO" UNIQUE ("TELEFONO")
/

-- Table PARADA_FAVORITA

CREATE TABLE "PARADA_FAVORITA"(
  "ID_PFAVORITA" Number(5,0) NOT NULL,
  "ID_USUARIO" Number(5,0) NOT NULL,
  "ID_PARADA" Number(5,0) NOT NULL
)
/

-- Add keys for table PARADA_FAVORITA

ALTER TABLE "PARADA_FAVORITA" ADD CONSTRAINT "PK_PARADA_FAVORITA" PRIMARY KEY ("ID_PFAVORITA")
/


-- Create foreign keys (relationships) section ------------------------------------------------- 

ALTER TABLE "TERMINAL" ADD CONSTRAINT "IDPA->TER" FOREIGN KEY ("ID_TERMINAL") REFERENCES "PARADA" ("ID_PARADA")
/


ALTER TABLE "TERMINAL" ADD CONSTRAINT "IDEM->TER" FOREIGN KEY ("ID_EMPRESA") REFERENCES "EMPRESA" ("ID_EMPRESA")
/


ALTER TABLE "LINEA_PARADA" ADD CONSTRAINT "IDPA->LIP" FOREIGN KEY ("ID_PARADA") REFERENCES "PARADA" ("ID_PARADA")
/


ALTER TABLE "LINEA_PARADA" ADD CONSTRAINT "IDLI->LIP" FOREIGN KEY ("ID_LINEA") REFERENCES "LINEA" ("ID_LINEA")
/


ALTER TABLE "LINEA" ADD CONSTRAINT "IDEM->LIN" FOREIGN KEY ("ID_EMPRESA") REFERENCES "EMPRESA" ("ID_EMPRESA")
/


ALTER TABLE "PARADA_FAVORITA" ADD CONSTRAINT "IDUS->PFA" FOREIGN KEY ("ID_USUARIO") REFERENCES "USUARIO" ("ID_USUARIO")
/


ALTER TABLE "PARADA_FAVORITA" ADD CONSTRAINT "IDPA->PFA" FOREIGN KEY ("ID_PARADA") REFERENCES "PARADA" ("ID_PARADA")
/


-- Creacion de SECUENCIAS ------------------------------------------------- 

CREATE SEQUENCE  "LINEAS"."SECUENCIA_USUARIO_ID"  MINVALUE 0 MAXVALUE 99999 INCREMENT BY 1 START WITH 4 NOCACHE  NOORDER  CYCLE
/

CREATE SEQUENCE  "LINEAS"."SECUENCIA_PARADA_FAVORITA_ID"  MINVALUE 0 MAXVALUE 99999 INCREMENT BY 1 START WITH 4 NOCACHE  NOORDER  CYCLE
/

CREATE SEQUENCE  "LINEAS"."SECUENCIA_EMPRESA_ID"  MINVALUE 0 MAXVALUE 99999 INCREMENT BY 1 START WITH 4 NOCACHE  NOORDER  CYCLE
/

CREATE SEQUENCE  "LINEAS"."SECUENCIA_LINEA_ID"  MINVALUE 0 MAXVALUE 99999 INCREMENT BY 1 START WITH 4 NOCACHE  NOORDER  CYCLE
/

CREATE SEQUENCE  "LINEAS"."SECUENCIA_LINEA_PARADA_ID"  MINVALUE 0 MAXVALUE 99999 INCREMENT BY 1 START WITH 4 NOCACHE  NOORDER  CYCLE
/

CREATE SEQUENCE  "LINEAS"."SECUENCIA_PARADA_ID"  MINVALUE 0 MAXVALUE 99999 INCREMENT BY 1 START WITH 4 NOCACHE  NOORDER  CYCLE
/

CREATE SEQUENCE  "LINEAS"."SECUENCIA_TERMINAL_ID"  MINVALUE 0 MAXVALUE 99999 INCREMENT BY 1 START WITH 4 NOCACHE  NOORDER  CYCLE
/

-- Creacion de PROCEDIMIENTOS------------------------------------------------- 

create or replace PROCEDURE INSERTAR_USUARIO 
  ( U_DNI         USUARIO.DNI%TYPE, 
    U_NOMBRE      USUARIO.NOMBRE%TYPE, 
    U_APELLIDO1   USUARIO.APELLIDO1%TYPE, 
    U_APELLIDO2   USUARIO.APELLIDO2%TYPE, 
    U_DIRECCION   USUARIO.DIRECCION%TYPE, 
    U_LOCALIDAD   USUARIO.LOCALIDAD%TYPE, 
    U_PROVINCIA   USUARIO.PROVINCIA%TYPE, 
    U_CE          USUARIO.CORREO_ELECTRONICO%TYPE, 
    U_CS          USUARIO.CONTRASENA%TYPE,
    U_TELEFONO    USUARIO.TELEFONO%TYPE)
IS
BEGIN
  INSERT INTO USUARIO 
  ( ID_USUARIO, 
    DNI,
    NOMBRE, 
    APELLIDO1, 
    APELLIDO2, 
    DIRECCION, 
    LOCALIDAD, 
    PROVINCIA, 
    CORREO_ELECTRONICO,
    CONTRASENA,
    TELEFONO)
  
  VALUES
  ( SECUENCIA_USUARIO_ID.NEXTVAL, 
    U_DNI, U_NOMBRE, 
    U_APELLIDO1, 
    U_APELLIDO2, 
    U_DIRECCION, 
    U_LOCALIDAD, 
    U_PROVINCIA, 
    U_CE, 
    U_CS,
    U_TELEFONO);
    
END INSERTAR_USUARIO;
/

create or replace PROCEDURE INSERTAR_EMPRESA 
  ( E_NIF             EMPRESA.NIF%TYPE, 
    E_NOMBRE          EMPRESA.NOMBRE%TYPE, 
    E_DIRECCION       EMPRESA.DIRECCION%TYPE,
    E_CORREOE         EMPRESA.CORREO_ELECTRONICO%TYPE,
    E_TELEFONO_FIJO   EMPRESA.TELEFONO_FIJO%TYPE)
IS
BEGIN
  INSERT INTO EMPRESA 
  ( ID_EMPRESA, 
    NIF,
    NOMBRE, 
    DIRECCION,
    CORREO_ELECTRONICO,
    TELEFONO_FIJO)
  
  VALUES
  ( SECUENCIA_EMPRESA_ID.NEXTVAL, 
    E_NIF, 
    E_NOMBRE, 
    E_DIRECCION,
    E_CORREOE,
    E_TELEFONO_FIJO);
    
END INSERTAR_EMPRESA;
/

create or replace PROCEDURE INSERTAR_PARADA
  ( P_DIRECCION   PARADA.DIRECCION%TYPE, 
    P_LOCALIDAD   PARADA.LOCALIDAD%TYPE, 
    P_PROVINCIA   PARADA.PROVINCIA%TYPE,
    P_LATITUD     PARADA.LATITUD%TYPE,
    P_LONGITUD    PARADA.LONGITUD%TYPE,
    P_CP          PARADA.CP%TYPE)
IS
BEGIN
  INSERT INTO PARADA
  ( ID_PARADA, 
    DIRECCION,
    LOCALIDAD, 
    PROVINCIA,
    LATITUD,
    LONGITUD,
    CP)
  
  VALUES
  ( SECUENCIA_PARADA_ID.NEXTVAL, 
    P_DIRECCION, 
    P_LOCALIDAD, 
    P_PROVINCIA,
    P_LATITUD,
    P_LONGITUD,
    P_CP);
    
END INSERTAR_PARADA;
/

-- Creacion de TRIGGERS------------------------------------------------- 

create or replace TRIGGER VERIFICAR_LOCALIDAD_PF
BEFORE INSERT OR UPDATE ON PARADA_FAVORITA
FOR EACH ROW
DECLARE    
    parada_localidad PARADA.LOCALIDAD%TYPE;
    usuario_localidad USUARIO.LOCALIDAD%TYPE;

BEGIN
    SELECT LOCALIDAD INTO parada_localidad FROM PARADA WHERE ID_PARADA = :NEW.ID_PARADA;

    SELECT LOCALIDAD INTO usuario_localidad FROM USUARIO WHERE ID_USUARIO = :NEW.ID_USUARIO;

    IF parada_localidad != usuario_localidad THEN
        RAISE_APPLICATION_ERROR(-20001, 'La parada seleccionada no está en la misma localidad que el usuario.');
    END IF;
END;
/

create or replace TRIGGER LIMITE_PF
BEFORE INSERT ON PARADA_FAVORITA
FOR EACH ROW
DECLARE
    total_paradas_favoritas NUMBER;
BEGIN
    SELECT COUNT(*) INTO total_paradas_favoritas FROM PARADA_FAVORITA
    WHERE id_usuario = :NEW.id_usuario;	

    IF total_paradas_favoritas >= 5 THEN
        RAISE_APPLICATION_ERROR(-20001, 'El usuario ya tiene el máximo de paradas favoritas permitidas (5).');
    END IF;
END;
/

